---
  project: "Etapas"
  language: "java"
  gof: "builder"
  description: >
    The builder pattern is an object creation software design pattern. Unlike
    the abstract factory pattern and the factory method pattern whose
    intention is to enable polymorphism, the intention of the builder pattern
    is to find a solution to the telescoping constructor anti-pattern. The
    telescoping constructor anti-pattern occurs when the increase of object
    constructor parameter combination leads to an exponential list of
    constructors. Instead of using numerous constructors, the builder pattern
    uses another object, a builder, that receives each initialization
    parameter step by step and then returns the resulting constructed object
    at once.

  director:
    -
      name: "director"
      method: "construct"

  builder:
    -
      name: "Builder"
      parts: # etapas de construção
        - part1
        - part2
        - part3
        - part4

      concrete:
        -
          name: "ConcreteBuilder"
          getResult: "doIt"
          create: ""

  products:
    -
      abstract: ""
      methods:
      concrete:
        -
          name: ""
          attributes:
          methods:
